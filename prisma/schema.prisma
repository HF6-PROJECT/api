// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DATABASE_URL_NON_POOLING")
}

model User {
    id       Int    @id @default(autoincrement())
    name     String @db.VarChar(50)
    email    String @unique @db.VarChar(255)
    password String @db.Text

    sessions UserSession[]
    Item     Item[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model UserSession {
    id           Int    @id @default(autoincrement())
    userId       Int
    refreshToken String @db.VarChar(1024)
    tokenFamily  String @db.VarChar(36)

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@unique([tokenFamily])
    @@index([userId])
    @@index([userId, tokenFamily])
}

model Item {
    id       Int    @id @default(autoincrement())
    name     String @db.VarChar(255)
    mimeType String @db.VarChar(255)
    ownerId  Int
    parentId Int?

    owner User @relation(fields: [ownerId], references: [id])

    parentItem Item?  @relation("ItemToItem", fields: [parentId], references: [id])
    Items      Item[] @relation("ItemToItem")

    ItemBlob ItemBlob?

    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    deletedAt DateTime?

    @@index([ownerId])
    @@index([parentId])
    @@index([ownerId, parentId])
    @@index([deletedAt])
}

model ItemBlob {
    id      Int    @id @default(autoincrement())
    blobUrl String @db.VarChar(1024)
    itemId  Int    @unique

    item Item @relation(fields: [itemId], references: [id])
}
